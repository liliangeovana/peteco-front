map $sent_http_content_type $expires {
  "text/html"                 epoch;
  "text/html; charset=utf-8"  epoch;
  "application/javascript"    1d;
  "text/css"                  1d;
  "image/jpeg"                1M;
  "image/png"                 1M;
  "application/json"          0;
  default                     off;
}

server {
  listen 80;
  server_name example.com;
  return 301 https://$host$request_uri;  # Redireciona HTTP para HTTPS
}

server {
  listen 443 ssl;
  server_name example.com;

  ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
  ssl_prefer_server_ciphers on;
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 1d;

  root /app/;
  charset utf-8;
  client_max_body_size 100M;

  gzip on;
  gzip_types text/plain application/xml text/css application/javascript application/json application/xml+rss;
  gzip_min_length 1000;

  # Cabeçalhos de segurança
  add_header X-Content-Type-Options "nosniff";
  add_header X-Frame-Options "SAMEORIGIN";
  add_header X-XSS-Protection "1; mode=block";
  add_header Referrer-Policy "strict-origin-when-cross-origin";
  add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self';";

  # Limitação de requisições para evitar DDoS
  limit_req_zone $binary_remote_addr zone=mylimit:10m rate=5r/s;

  location / {
    limit_req zone=mylimit burst=10 nodelay;
    expires $expires;
    proxy_pass http://peteco-app:3000/;
    proxy_set_header Host               $host;
    proxy_set_header X-Real-IP          $remote_addr;
    proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto  $scheme;
    proxy_redirect off;
    proxy_read_timeout 1m;
    proxy_connect_timeout 1m;
  }

  access_log /var/log/nginx/access.log combined;
  error_log /var/log/nginx/error.log warn;
}
